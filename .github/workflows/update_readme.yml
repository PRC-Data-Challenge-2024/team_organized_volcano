name: Update README with Results

on: {}
# on: 
#   schedule:
#     - cron: '0 0 * * *'  # Runs once every day at midnight UTC
# workflow_dispatch: # Allows manual triggering

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run curl command and convert to Markdown table
        run: |
          # Fetch the JSON data
          result=$(curl -X 'GET' \
            'https://datacomp.opensky-network.org/api/rankings' \
            -H 'accept: application/json')

          # Convert JSON to Markdown table format, with bold for our team and sorting by rank
          table=$(echo "$result" | jq -r '
            sort_by(.rank) |
            .[] |
            "| \(.rank) | " + (if .team_name == "team_organized_volcano" then "**\(.team_name)**" else .team_name end) +
            " | \(.rmse) | \(.file_version) |"')

          # Add the table header
          echo "| Rank | Team Name | RMSE | File Version |" > result_table.txt
          echo "| ---- | --------- | ---- | ------------ |" >> result_table.txt

          # Append the table rows
          echo "$table" >> result_table.txt

      - name: Replace content between placeholders
        run: |
          # Use sed to replace the content between the placeholders
          sed -i '/<!--result-start-->/,/<!--result-end-->/{
              /<!--result-start-->/!{
              /<!--result-end-->/!d;
              }
          }' README.md

          # Insert the new table between the placeholders
          sed -i '/<!--result-start-->/r result_table.txt' README.md

      - name: Clean up temporary files
        run: |
          rm result_table.txt

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}  # Use your PAT for authentication
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add README.md
          if ! git diff --cached --quiet; then
            git commit -m 'Update README with latest leaderboard data'
            git push origin HEAD:main
          else
            echo "No changes detected, skipping commit."
          fi
